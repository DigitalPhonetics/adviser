OpenFace:
* download https://github.com/TadasBaltrusaitis/OpenFace
* copy files into tools/OpenFace (don't overwrite existing files - they modify the build process + add new sources / modules)
* requirements:
    * opencv-4.1.0
    * opencv_contrib-4.1.0
    * qt5
    * libzmq
    * cppzmq
* mkdir build
* cd build 
* call CMake:
   (Example config: fill in qt path, extra_modules_path):
        cmake -D CMAKE_BUILD_TYPE=RELEASE \
            -D WITH_TBB=ON \
            -D WITH_V4L=ON \
            -D OPENCV_SKIP_PYTHON_LOADER=ON \
            -D CMAKE_PREFIX_PATH=/usr/local/opt/qt5 \
            -D CMAKE_MODULE_PATH="$QT5PATH"/lib/cmake \
            -D OPENCV_PYTHON3_INSTALL_PATH=~/.virtualenvs/OpenCV-"$cvVersion"-py3/lib/python3.7/site-packages \
        -D WITH_QT=ON \
        -D WITH_OPENGL=ON \
        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.0/modules \
        -D BUILD_EXAMPLES=OFF ..
* for more explanations / plattform-specific build instructions check also https://github.com/TadasBaltrusaitis/OpenFace/wiki
* make
* cd ..
* sh download_models.sh
* check that build/bin/model/patch_experts contains cen_patches_* files. If not, copy them from lib/local/LandmarkDetector/model/patch_experts
* copy local/lib/3rdParty/OpenCV/classifiers to build/bin
* verify installation by running ./tools/OpenFace/build/bin/FaceLandmarkVid -device 0